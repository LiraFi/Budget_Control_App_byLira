{"version":3,"sources":["components/Money.tsx","components/Balance.tsx","components/Savings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Money","_ref","variant","list","setList","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","amount","setAmount","_useState5","_useState6","date","setDate","clearFields","react_default","a","createElement","className","onSubmit","e","preventDefault","id","Date","now","concat","toConsumableArray","document","getElementById","value","alert","htmlFor","type","name","placeholder","onChange","target","required","Number","length","map","item","key","Balance","balance","setSavings","savings","Savings","goal","setGoal","max","defaultValue","App","incomes","setIncomes","spents","setSpents","_useState7","_useState8","setBalance","totalIncome","reduce","prev","current","totalSpent","useEffect","components_Money","components_Savings","components_Balance","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ba06f3c5.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport {MoneyProp} from \"../kind/money\"\r\n\r\nconst Money = ({variant, list, setList}: MoneyProp) => {\r\n    const [title, setTitle] = useState(\"\")\r\n    const [amount, setAmount] = useState(0)\r\n    const [date, setDate] = useState(\"\")\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (title !== \"\" && date !==\"\" && amount > 0) {\r\n    setList ([{amount, date, title, id:Date.now()}, ...list])\r\n    if (document) {\r\n        (document.getElementById(\"amount\")as HTMLInputElement).value = \"\";\r\n    }\r\n    setDate(\"\")\r\n    setTitle(\"\")} else {\r\n        alert(\"Please, fill in all fields.\")\r\n    }\r\n    clearFields()\r\n}\r\n\r\nconst clearFields =() => {\r\n    setTitle(\"\")\r\n    setAmount;\r\n    setDate (\"\")\r\n}\r\n\r\nreturn(\r\n    <div className=\"form-wrap\">\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n            <div>\r\n                <label htmlFor=\"title\">Title of {variant}</label>{}\r\n                <input type=\"text\" name=\"title\" placeholder=\"Enter a title\" id=\"title\" onChange={(e) => setTitle(e.target.value)} value={title} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"amount\">Amount of {variant}</label>\r\n                <input type=\"number\" name=\"amount\" placeholder=\"Enter an amount\" id=\"amount\" onChange={(e) => setAmount(Number(e.target.value))} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"date\">Date of {variant}</label>{}\r\n                <input type=\"date\" name=\"date\" id=\"date\" onChange={(e) => setDate(e.target.value)} value={date} required/>\r\n            </div>\r\n            <button type=\"submit\">Save</button>\r\n        </form>\r\n        <div className=\"list\">\r\n        <ul>\r\n            {\r\n                list.length > 0 && list.map(\r\n                    item => (\r\n                        <li key = {item.id}> {item.title}, {item.amount}, {item.date}</li>\r\n                    )\r\n                )\r\n            }\r\n        </ul>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\nexport default Money","import React, { useState } from \"react\"\r\nimport { BalanceProp } from \"../kind/balance\"\r\n\r\nconst Balance = ({balance, setSavings }: BalanceProp) =>{\r\n    const [amount, setAmount] = useState(0)\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (amount <= balance) {\r\n            setSavings((savings)=> savings + amount)\r\n        } else {\r\n        alert (\"Not enough money on your balance!\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p>{balance}</p>\r\n            <form onSubmit = {(e) => onSubmit(e)}>\r\n                <label htmlFor=\"addSavings\">Top-up saving account</label>\r\n                <input type=\"number\" name=\"addSavings\" id=\"addSavings\" onChange={(e) => setAmount(Number(e.target.value))} />\r\n                <button className=\"btn_bal\" type=\"submit\">Top-up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance","import React, {useState} from \"react\"\r\nimport {SavingsProp} from \"../kind/savings\"\r\n\r\nconst Savings = ({savings}: SavingsProp) => {\r\n    const [goal, setGoal] = useState(0)\r\n    return (\r\n        <div className=\"save\">\r\n            <p>Current savings: {savings}</p>\r\n            <p>Current goal: {goal}</p>\r\n            <progress className=\"pBar\" value={savings} max={goal} />\r\n            <form>\r\n                <label htmlFor=\"\">Set Goal</label>\r\n                <input type=\"number\" name=\"goal\" id=\"goal\" onChange={(e) => setGoal(Number(e.target.value))}/>\r\n                <input type=\"reset\" defaultValue=\"Reset\" /> \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Savings","import React, {useEffect, useState} from 'react';\r\n\r\nimport './App.css';\r\nimport Money from './components/Money';\r\nimport Balance from './components/Balance';\r\nimport Savings from './components/Savings';\r\nimport { MoneyItem } from './kind/money';\r\n\r\nfunction App() {\r\n  const [incomes, setIncomes] = useState<MoneyItem[]>([])\r\n  const [spents, setSpents] = useState<MoneyItem[]>([])\r\n  const [savings, setSavings] = useState(0)\r\n  const [balance, setBalance] = useState(0)\r\n  const totalIncome = incomes.reduce((prev, current) => prev + current.amount, 0)\r\n  const totalSpent = spents.reduce((prev, current) => prev + current.amount, 0)\r\n  useEffect(() => {\r\n    setBalance(totalIncome - totalSpent - savings)\r\n  }, [incomes, spents, savings])\r\n  return (\r\n    <div className=\"Container\">\r\n    <div className=\"AppInc\">\r\n      <Money variant=\"Incomes\" list={incomes} setList={setIncomes} /> \r\n      </div>\r\n      <div className=\"AppExp\">\r\n      <Money variant=\"Expences\" list={spents} setList={setSpents} /> \r\n      </div>\r\n      <div className=\"AppSav\">\r\n      <Savings savings={savings} />\r\n      </div>\r\n      <div className=\"AppBal\">\r\n      <Balance balance={balance} setSavings={setSavings} />\r\n    </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}